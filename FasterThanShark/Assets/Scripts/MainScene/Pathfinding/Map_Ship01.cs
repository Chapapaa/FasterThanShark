using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class Map_Ship01 : MonoBehaviour {
	
	List<Node> AllNodes = new List<Node>();
	
	public Node a0 = new Node();
	public Node a1 = new Node();
	public Node a2 = new Node();
	public Node a3 = new Node();
	public Node a4 = new Node();
	public Node a5 = new Node();
	public Node a6 = new Node();
	public Node a7 = new Node();
	public Node a8 = new Node();
	public Node a9 = new Node();
	public Node a10 = new Node();
	public Node a11 = new Node();
	public Node a12 = new Node();
	public Node a13 = new Node();
	public Node a14 = new Node();
	public Node a15 = new Node();
	public Node b1 = new Node();
	public Node b2 = new Node();
	public Node b3 = new Node();
	public Node b4 = new Node();
	public Node b5 = new Node();
	public Node b6 = new Node();
	public Node b7 = new Node();
	public Node b8 = new Node();
	public Node b9 = new Node();
	public Node b10 = new Node();
	public Node b11 = new Node();
	public Node b12 = new Node();
	public Node b13 = new Node();
	public Node b14 = new Node();
	public Node b15 = new Node();
	public Node c1 = new Node();
	public Node c2 = new Node();
	public Node c3 = new Node();
	public Node c4 = new Node();
	public Node c5 = new Node();
	public Node c6 = new Node();
	public Node c7 = new Node();
	public Node c8 = new Node();
	public Node c9 = new Node();
	public Node c10 = new Node();
	public Node c11 = new Node();
	public Node c12 = new Node();
	public Node c13 = new Node();
	public Node c14 = new Node();
	public Node c15 = new Node();
	public Node d1 = new Node();
	public Node d2 = new Node();
	public Node d3 = new Node();
	public Node d4 = new Node();
	public Node d5 = new Node();
	public Node d6 = new Node();
	public Node d7 = new Node();
	public Node d8 = new Node();
	public Node d9 = new Node();
	public Node d10 = new Node();
	public Node d11 = new Node();
	public Node d12 = new Node();
	public Node d13 = new Node();
	public Node d14 = new Node();
	public Node d15 = new Node();
	public Node e1 = new Node();
	public Node e2 = new Node();
	public Node e3 = new Node();
	public Node e4 = new Node();
	public Node e5 = new Node();
	public Node e6 = new Node();
	public Node e7 = new Node();
	public Node e8 = new Node();
	public Node e9 = new Node();
	public Node e10 = new Node();
	public Node e11 = new Node();
	public Node e12 = new Node();
	public Node e13 = new Node();
	public Node e14 = new Node();
	public Node e15 = new Node();
	
	public Node f1 = new Node();
	public Node f2 = new Node();
	public Node f3 = new Node();
	public Node f4 = new Node();
	public Node f5 = new Node();
	public Node f6 = new Node();
	public Node f7 = new Node();
	public Node f8 = new Node();
	public Node f9 = new Node();
	public Node f10 = new Node();
	public Node f11 = new Node();
	public Node f12 = new Node();
	public Node f13 = new Node();
	public Node f14 = new Node();
	public Node f15 = new Node();
	public Node g1 = new Node();
	public Node g2 = new Node();
	public Node g3 = new Node();
	public Node g4 = new Node();
	public Node g5 = new Node();
	public Node g6 = new Node();
	public Node g7 = new Node();
	public Node g8 = new Node();
	public Node g9 = new Node();
	public Node g10 = new Node();
	public Node g11 = new Node();
	public Node g12 = new Node();
	public Node g13 = new Node();
	public Node g14 = new Node();
	public Node g15 = new Node();
	public Node h1 = new Node();
	public Node h2 = new Node();
	public Node h3 = new Node();
	public Node h4 = new Node();
	public Node h5 = new Node();
	public Node h6 = new Node();
	public Node h7 = new Node();
	public Node h8 = new Node();
	public Node h9 = new Node();
	public Node h10 = new Node();
	public Node h11 = new Node();
	public Node h12 = new Node();
	public Node h13 = new Node();
	public Node h14 = new Node();
	public Node h15 = new Node();
	public Node i1 = new Node();
	public Node i2 = new Node();
	public Node i3 = new Node();
	public Node i4 = new Node();
	public Node i5 = new Node();
	public Node i6 = new Node();
	public Node i7 = new Node();
	public Node i8 = new Node();
	public Node i9 = new Node();
	public Node i10 = new Node();
	public Node i11 = new Node();
	public Node i12 = new Node();
	public Node i13 = new Node();
	public Node i14 = new Node();
	public Node i15 = new Node();
	public Node j1 = new Node();
	public Node j2 = new Node();
	public Node j3 = new Node();
	public Node j4 = new Node();
	public Node j5 = new Node();
	public Node j6 = new Node();
	public Node j7 = new Node();
	public Node j8 = new Node();
	public Node j9 = new Node();
	public Node j10 = new Node();
	public Node j11 = new Node();
	public Node j12 = new Node();
	public Node j13 = new Node();
	public Node j14 = new Node();
	public Node j15 = new Node();
	
	public Door d_a0 = new Door(false);
	
	public Door dX_a1 = new Door();
	public Door dX_a2 = new Door();
	public Door dX_a3 = new Door();
	public Door dX_a4 = new Door(true);
	public Door dX_a5 = new Door();
	public Door dX_a6 = new Door(true);
	public Door dX_a7 = new Door();
	public Door dX_a8 = new Door();
	public Door dX_a9 = new Door();
	public Door dX_a10 = new Door();
	public Door dX_a11 = new Door();
	public Door dX_a12 = new Door();
	public Door dX_a13 = new Door();
	public Door dX_a14 = new Door();
	public Door dX_a15 = new Door();
	public Door dY_a1 = new Door();
	public Door dY_a2 = new Door();
	public Door dY_a3 = new Door();
	public Door dY_a4 = new Door();
	public Door dY_a5 = new Door(true);
	public Door dY_a6 = new Door(true);
	public Door dY_a7 = new Door();
	public Door dY_a8 = new Door();
	public Door dY_a9 = new Door();
	public Door dY_a10 = new Door();
	public Door dY_a11 = new Door();
	public Door dY_a12 = new Door();
	public Door dY_a13 = new Door();
	public Door dY_a14 = new Door();
	public Door dY_a15 = new Door();

	public Door dX_b1 = new Door(true);
	public Door dX_b2 = new Door(true);
	public Door dX_b3 = new Door();
	public Door dX_b4 = new Door(true);
	public Door dX_b5 = new Door();
	public Door dX_b6 = new Door(true);
	public Door dX_b7 = new Door();
	public Door dX_b8 = new Door(true);
	public Door dX_b9 = new Door();
	public Door dX_b10 = new Door(true);
	public Door dX_b11 = new Door();
	public Door dX_b12 = new Door();
	public Door dX_b13 = new Door();
	public Door dX_b14 = new Door();
	public Door dX_b15 = new Door();
	public Door dY_b1 = new Door();
	public Door dY_b2 = new Door();
	public Door dY_b3 = new Door(true);
	public Door dY_b4 = new Door(true);
	public Door dY_b5 = new Door();
	public Door dY_b6 = new Door();
	public Door dY_b7 = new Door(true);
	public Door dY_b8 = new Door(true);
	public Door dY_b9 = new Door(true);
	public Door dY_b10 = new Door(true);
	public Door dY_b11 = new Door();
	public Door dY_b12 = new Door();
	public Door dY_b13 = new Door();
	public Door dY_b14 = new Door();
	public Door dY_b15 = new Door();

	public Door dX_c1 = new Door(true);
	public Door dX_c2 = new Door(true);
	public Door dX_c3 = new Door();
	public Door dX_c4 = new Door(true);
	public Door dX_c5 = new Door();
	public Door dX_c6 = new Door(true);
	public Door dX_c7 = new Door();
	public Door dX_c8 = new Door(true);
	public Door dX_c9 = new Door();
	public Door dX_c10 = new Door(true);
	public Door dX_c11 = new Door();
	public Door dX_c12 = new Door();
	public Door dX_c13 = new Door();
	public Door dX_c14 = new Door();
	public Door dX_c15 = new Door();
	public Door dY_c1 = new Door();
	public Door dY_c2 = new Door();
	public Door dY_c3 = new Door();
	public Door dY_c4 = new Door();
	public Door dY_c5 = new Door(true);
	public Door dY_c6 = new Door(true);
	public Door dY_c7 = new Door();
	public Door dY_c8 = new Door();
	public Door dY_c9 = new Door();
	public Door dY_c10 = new Door();
	public Door dY_c11 = new Door();
	public Door dY_c12 = new Door();
	public Door dY_c13 = new Door();
	public Door dY_c14 = new Door();
	public Door dY_c15 = new Door();

	public Door dX_d1 = new Door();
	public Door dX_d2 = new Door();
	public Door dX_d3 = new Door();
	public Door dX_d4 = new Door(true);
	public Door dX_d5 = new Door();
	public Door dX_d6 = new Door(true);
	public Door dX_d7 = new Door();
	public Door dX_d8 = new Door();
	public Door dX_d9 = new Door();
	public Door dX_d10 = new Door();
	public Door dX_d11 = new Door();
	public Door dX_d12 = new Door();
	public Door dX_d13 = new Door();
	public Door dX_d14 = new Door();
	public Door dX_d15 = new Door();
	public Door dY_d1 = new Door();
	public Door dY_d2 = new Door();
	public Door dY_d3 = new Door();
	public Door dY_d4 = new Door();
	public Door dY_d5 = new Door();
	public Door dY_d6 = new Door();
	public Door dY_d7 = new Door();
	public Door dY_d8 = new Door();
	public Door dY_d9 = new Door();
	public Door dY_d10 = new Door();
	public Door dY_d11 = new Door();
	public Door dY_d12 = new Door();
	public Door dY_d13 = new Door();
	public Door dY_d14 = new Door();
	public Door dY_d15 = new Door();

	public Door dX_e1 = new Door();
	public Door dX_e2 = new Door();
	public Door dX_e3 = new Door();
	public Door dX_e4 = new Door();
	public Door dX_e5 = new Door();
	public Door dX_e6 = new Door();
	public Door dX_e7 = new Door();
	public Door dX_e8 = new Door();
	public Door dX_e9 = new Door();
	public Door dX_e10 = new Door();
	public Door dX_e11 = new Door();
	public Door dX_e12 = new Door();
	public Door dX_e13 = new Door();
	public Door dX_e14 = new Door();
	public Door dX_e15 = new Door();
	public Door dY_e1 = new Door();
	public Door dY_e2 = new Door();
	public Door dY_e3 = new Door();
	public Door dY_e4 = new Door();
	public Door dY_e5 = new Door();
	public Door dY_e6 = new Door();
	public Door dY_e7 = new Door();
	public Door dY_e8 = new Door();
	public Door dY_e9 = new Door();
	public Door dY_e10 = new Door();
	public Door dY_e11 = new Door();
	public Door dY_e12 = new Door();
	public Door dY_e13 = new Door();
	public Door dY_e14 = new Door();
	public Door dY_e15 = new Door();

	public Door dX_f1 = new Door();
	public Door dX_f2 = new Door();
	public Door dX_f3 = new Door();
	public Door dX_f4 = new Door();
	public Door dX_f5 = new Door();
	public Door dX_f6 = new Door();
	public Door dX_f7 = new Door();
	public Door dX_f8 = new Door();
	public Door dX_f9 = new Door();
	public Door dX_f10 = new Door();
	public Door dX_f11 = new Door();
	public Door dX_f12 = new Door();
	public Door dX_f13 = new Door();
	public Door dX_f14 = new Door();
	public Door dX_f15 = new Door();
	public Door dY_f1 = new Door();
	public Door dY_f2 = new Door();
	public Door dY_f3 = new Door();
	public Door dY_f4 = new Door();
	public Door dY_f5 = new Door();
	public Door dY_f6 = new Door();
	public Door dY_f7 = new Door();
	public Door dY_f8 = new Door();
	public Door dY_f9 = new Door();
	public Door dY_f10 = new Door();
	public Door dY_f11 = new Door();
	public Door dY_f12 = new Door();
	public Door dY_f13 = new Door();
	public Door dY_f14 = new Door();
	public Door dY_f15 = new Door();
	public Door dX_g1 = new Door();
	public Door dX_g2 = new Door();
	public Door dX_g3 = new Door();
	public Door dX_g4 = new Door();
	public Door dX_g5 = new Door();
	public Door dX_g6 = new Door();
	public Door dX_g7 = new Door();
	public Door dX_g8 = new Door();
	public Door dX_g9 = new Door();
	public Door dX_g10 = new Door();
	public Door dX_g11 = new Door();
	public Door dX_g12 = new Door();
	public Door dX_g13 = new Door();
	public Door dX_g14 = new Door();
	public Door dX_g15 = new Door();
	public Door dY_g1 = new Door();
	public Door dY_g2 = new Door();
	public Door dY_g3 = new Door();
	public Door dY_g4 = new Door();
	public Door dY_g5 = new Door();
	public Door dY_g6 = new Door();
	public Door dY_g7 = new Door();
	public Door dY_g8 = new Door();
	public Door dY_g9 = new Door();
	public Door dY_g10 = new Door();
	public Door dY_g11 = new Door();
	public Door dY_g12 = new Door();
	public Door dY_g13 = new Door();
	public Door dY_g14 = new Door();
	public Door dY_g15 = new Door();
	public Door dX_h1 = new Door();
	public Door dX_h2 = new Door();
	public Door dX_h3 = new Door();
	public Door dX_h4 = new Door();
	public Door dX_h5 = new Door();
	public Door dX_h6 = new Door();
	public Door dX_h7 = new Door();
	public Door dX_h8 = new Door();
	public Door dX_h9 = new Door();
	public Door dX_h10 = new Door();
	public Door dX_h11 = new Door();
	public Door dX_h12 = new Door();
	public Door dX_h13 = new Door();
	public Door dX_h14 = new Door();
	public Door dX_h15 = new Door();
	public Door dY_h1 = new Door();
	public Door dY_h2 = new Door();
	public Door dY_h3 = new Door();
	public Door dY_h4 = new Door();
	public Door dY_h5 = new Door();
	public Door dY_h6 = new Door();
	public Door dY_h7 = new Door();
	public Door dY_h8 = new Door();
	public Door dY_h9 = new Door();
	public Door dY_h10 = new Door();
	public Door dY_h11 = new Door();
	public Door dY_h12 = new Door();
	public Door dY_h13 = new Door();
	public Door dY_h14 = new Door();
	public Door dY_h15 = new Door();
	public Door dX_i1 = new Door();
	public Door dX_i2 = new Door();
	public Door dX_i3 = new Door();
	public Door dX_i4 = new Door();
	public Door dX_i5 = new Door();
	public Door dX_i6 = new Door();
	public Door dX_i7 = new Door();
	public Door dX_i8 = new Door();
	public Door dX_i9 = new Door();
	public Door dX_i10 = new Door();
	public Door dX_i11 = new Door();
	public Door dX_i12 = new Door();
	public Door dX_i13 = new Door();
	public Door dX_i14 = new Door();
	public Door dX_i15 = new Door();
	public Door dY_i1 = new Door();
	public Door dY_i2 = new Door();
	public Door dY_i3 = new Door();
	public Door dY_i4 = new Door();
	public Door dY_i5 = new Door();
	public Door dY_i6 = new Door();
	public Door dY_i7 = new Door();
	public Door dY_i8 = new Door();
	public Door dY_i9 = new Door();
	public Door dY_i10 = new Door();
	public Door dY_i11 = new Door();
	public Door dY_i12 = new Door();
	public Door dY_i13 = new Door();
	public Door dY_i14 = new Door();
	public Door dY_i15 = new Door();
	public Door dX_j1 = new Door();
	public Door dX_j2 = new Door();
	public Door dX_j3 = new Door();
	public Door dX_j4 = new Door();
	public Door dX_j5 = new Door();
	public Door dX_j6 = new Door();
	public Door dX_j7 = new Door();
	public Door dX_j8 = new Door();
	public Door dX_j9 = new Door();
	public Door dX_j10 = new Door();
	public Door dX_j11 = new Door();
	public Door dX_j12 = new Door();
	public Door dX_j13 = new Door();
	public Door dX_j14 = new Door();
	public Door dX_j15 = new Door();
	public Door dY_j1 = new Door();
	public Door dY_j2 = new Door();
	public Door dY_j3 = new Door();
	public Door dY_j4 = new Door();
	public Door dY_j5 = new Door();
	public Door dY_j6 = new Door();
	public Door dY_j7 = new Door();
	public Door dY_j8 = new Door();
	public Door dY_j9 = new Door();
	public Door dY_j10 = new Door();
	public Door dY_j11 = new Door();
	public Door dY_j12 = new Door();
	public Door dY_j13 = new Door();
	public Door dY_j14 = new Door();
	public Door dY_j15 = new Door();
	
	void Start()
	{
		_InitMap();
		a0._Init(	false,	-1, 	-1);
		a1._Init(	false, 	0, 		0);
		a2._Init(	false, 	1, 		0);
		a3._Init(	true, 	2, 		0);
		a4._Init(	true, 	3, 		0);
		a5._Init(	true, 	4, 		0);
		a6._Init(	true,	5, 		0);
		a7._Init(	true,	6, 		0);
		a8._Init(	true,	7, 		0);
		a9._Init(	false,	8, 		0);
		a10._Init(	false, 	9,	 	0);
		a11._Init(	false, 	10, 	0);
		a12._Init(	false, 	11, 	0);
		a13._Init(	false, 	12, 	0);
		a14._Init(	false, 	13, 	0);
		a15._Init(	false, 	14, 	0);
		
		b1._Init(	true, 	0, 		1);
		b2._Init(	true, 	1, 		1);
		b3._Init(	true, 	2, 		1);
		b4._Init(	false, 	3, 		1);
		b5._Init(	true, 	4, 		1);
		b6._Init(	true, 	5, 		1);
		b7._Init(	true, 	6, 		1);
		b8._Init(	true, 	7, 		1);
		b9._Init(	true, 	8, 		1);
		b10._Init(	true, 	9,	 	1);
		b11._Init(	true, 	10, 	1);
		b12._Init(	true, 	11, 	1);
		b13._Init(	false, 	12, 	1);
		b14._Init(	false, 	13, 	1);
		b15._Init(	false, 	14, 	1);
		
		c1._Init(	true, 	0, 		2);
		c2._Init(	true, 	1, 		2);
		c3._Init(	true, 	2, 		2);
		c4._Init(	true, 	3, 		2);
		c5._Init(	true, 	4, 		2);
		c6._Init(	true, 	5, 		2);
		c7._Init(	true, 	6, 		2);
		c8._Init(	true, 	7, 		2);
		c9._Init(	true, 	8, 		2);
		c10._Init(	true, 	9,	 	2);
		c11._Init(	true, 	10, 	2);
		c12._Init(	true, 	11, 	2);
		c13._Init(	false, 	12, 	2);
		c14._Init(	false, 	13, 	2);
		c15._Init(	false, 	14, 	2);
		
		d1._Init(	false, 	0, 		3);
		d2._Init(	false, 	1, 		3);
		d3._Init(	true, 	2, 		3);
		d4._Init(	true, 	3, 		3);
		d5._Init(	true, 	4, 		3);
		d6._Init(	true, 	5, 		3);
		d7._Init(	true, 	6, 		3);
		d8._Init(	true, 	7, 		3);
		d9._Init(	false, 	8, 		3);
		d10._Init(	false, 	9,	 	3);
		d11._Init(	false, 	10, 	3);
		d12._Init(	false, 	11, 	3);
		d13._Init(	false, 	12, 	3);
		d14._Init(	false, 	13, 	3);
		d15._Init(	false, 	14, 	3);
		
		e1._Init(	false, 	0, 		4);
		e2._Init(	false, 	1, 		4);
		e3._Init(	false, 	2, 		4);
		e4._Init(	false, 	3, 		4);
		e5._Init(	false, 	4, 		4);
		e6._Init(	false, 	5, 		4);
		e7._Init(	false, 	6, 		4);
		e8._Init(	false, 	7, 		4);
		e9._Init(	false, 	8, 		4);
		e10._Init(	true, 	9, 		4);
		e11._Init(	false, 	10, 	4);
		e12._Init(	false, 	11, 	4);
		e13._Init(	false, 	12, 	4);
		e14._Init(	false, 	13, 	4);
		e15._Init(	false, 	14, 	4);
		
		f1._Init(	false, 	0, 		5);
		f2._Init(	true, 	1, 		5);
		f3._Init(	true, 	2, 		5);
		f4._Init(	true, 	3, 		5);
		f5._Init(	true, 	4, 		5);
		f6._Init(	true, 	5, 		5);
		f7._Init(	true, 	6, 		5);
		f8._Init(	true, 	7, 		5);
		f9._Init(	true, 	8, 		5);
		f10._Init(	true, 	9, 		5);
		f11._Init(	false, 	10, 	5);
		f12._Init(	false, 	11, 	5);
		f13._Init(	false, 	12, 	5);
		f14._Init(	false, 	13, 	5);
		f15._Init(	false, 	14, 	5);
		
		g1._Init(	false, 	0, 		6);
		g2._Init(	true, 	1, 		6);
		g3._Init(	true, 	2, 		6);
		g4._Init(	false, 	3, 		6);
		g5._Init(	false, 	4, 		6);
		g6._Init(	false, 	5, 		6);
		g7._Init(	true, 	6, 		6);
		g8._Init(	true, 	7, 		6);
		g9._Init(	true, 	8, 		6);
		g10._Init(	false, 	9, 		6);
		g11._Init(	false, 	10, 	6);
		g12._Init(	false, 	11, 	6);
		g13._Init(	false, 	12, 	6);
		g14._Init(	false, 	13, 	6);
		g15._Init(	false, 	14, 	6);
		
		h1._Init(	false, 	0, 		7);
		h2._Init(	true, 	1, 		7);
		h3._Init(	true, 	2, 		7);
		h4._Init(	false, 	3, 		7);
		h5._Init(	false, 	4, 		7);
		h6._Init(	false, 	5, 		7);
		h7._Init(	true, 	6, 		7);
		h8._Init(	false, 	7, 		7);
		h9._Init(	true, 	8, 		7);
		h10._Init(	false, 	9, 		7);
		h11._Init(	false, 	10, 	7);
		h12._Init(	false, 	11, 	7);
		h13._Init(	false, 	12, 	7);
		h14._Init(	false, 	13, 	7);
		h15._Init(	false, 	14, 	7);
		
		i1._Init(	false, 	0, 		8);
		i2._Init(	true, 	1, 		8);
		i3._Init(	true, 	2, 		8);
		i4._Init(	false, 	3, 		8);
		i5._Init(	false, 	4, 		8);
		i6._Init(	false, 	5, 		8);
		i7._Init(	true, 	6, 		8);
		i8._Init(	true, 	7, 		8);
		i9._Init(	true, 	8, 		8);
		i10._Init(	false, 	9, 		8);
		i11._Init(	false, 	10, 	8);
		i12._Init(	false, 	11, 	8);
		i13._Init(	false, 	12, 	8);
		i14._Init(	false, 	13, 	8);
		i15._Init(	false, 	14, 	8);
		
		j1._Init(	false, 	0, 		9);
		j2._Init(	false, 	1, 		9);
		j3._Init(	false, 	2, 		9);
		j4._Init(	false, 	3, 		9);
		j5._Init(	false, 	4, 		9);
		j6._Init(	false, 	5, 		9);
		j7._Init(	false, 	6, 		9);
		j8._Init(	false, 	7, 		9);
		j9._Init(	false, 	8, 		9);
		j10._Init(	false, 	9, 		9);
		j11._Init(	false, 	10, 	9);
		j12._Init(	false, 	11, 	9);
		j13._Init(	false, 	12, 	9);
		j14._Init(	false, 	13, 	9);
		j15._Init(	false, 	14, 	9);
		
	}
	
	void _InitMap()
	{
		AllNodes.Add(a0);
		AllNodes.Add(a1);
		AllNodes.Add(a2);
		AllNodes.Add(a3);
		AllNodes.Add(a4);
		AllNodes.Add(a5);
		AllNodes.Add(a6);
		AllNodes.Add(a7);
		AllNodes.Add(a8);
		AllNodes.Add(a9);
		AllNodes.Add(a10);
		AllNodes.Add(a11);
		AllNodes.Add(a12);
		AllNodes.Add(a13);
		AllNodes.Add(a14);
		AllNodes.Add(a15);
		AllNodes.Add(b1);
		AllNodes.Add(b2);
		AllNodes.Add(b3);
		AllNodes.Add(b4);
		AllNodes.Add(b5);
		AllNodes.Add(b6);
		AllNodes.Add(b7);
		AllNodes.Add(b8);
		AllNodes.Add(b9);
		AllNodes.Add(b10);
		AllNodes.Add(b11);
		AllNodes.Add(b12);
		AllNodes.Add(b13);
		AllNodes.Add(b14);
		AllNodes.Add(b15);
		AllNodes.Add(c1);
		AllNodes.Add(c2);
		AllNodes.Add(c3);
		AllNodes.Add(c4);
		AllNodes.Add(c5);
		AllNodes.Add(c6);
		AllNodes.Add(c7);
		AllNodes.Add(c8);
		AllNodes.Add(c9);
		AllNodes.Add(c10);
		AllNodes.Add(c11);
		AllNodes.Add(c12);
		AllNodes.Add(c13);
		AllNodes.Add(c14);
		AllNodes.Add(c15);
		AllNodes.Add(d1);
		AllNodes.Add(d2);
		AllNodes.Add(d3);
		AllNodes.Add(d4);
		AllNodes.Add(d5);
		AllNodes.Add(d6);
		AllNodes.Add(d7);
		AllNodes.Add(d8);
		AllNodes.Add(d9);
		AllNodes.Add(d10);
		AllNodes.Add(d11);
		AllNodes.Add(d12);
		AllNodes.Add(d13);
		AllNodes.Add(d14);
		AllNodes.Add(d15);
		AllNodes.Add(e1);
		AllNodes.Add(e2);
		AllNodes.Add(e3);
		AllNodes.Add(e4);
		AllNodes.Add(e5);
		AllNodes.Add(e6);
		AllNodes.Add(e7);
		AllNodes.Add(e8);
		AllNodes.Add(e9);
		AllNodes.Add(e10);
		AllNodes.Add(e11);
		AllNodes.Add(e12);
		AllNodes.Add(e13);
		AllNodes.Add(e14);
		AllNodes.Add(e15);
		AllNodes.Add(f1);
		AllNodes.Add(f2);
		AllNodes.Add(f3);
		AllNodes.Add(f4);
		AllNodes.Add(f5);
		AllNodes.Add(f6);
		AllNodes.Add(f7);
		AllNodes.Add(f8);
		AllNodes.Add(f9);
		AllNodes.Add(f10);
		AllNodes.Add(f11);
		AllNodes.Add(f12);
		AllNodes.Add(f13);
		AllNodes.Add(f14);
		AllNodes.Add(f15);
		AllNodes.Add(g1);
		AllNodes.Add(g2);
		AllNodes.Add(g3);
		AllNodes.Add(g4);
		AllNodes.Add(g5);
		AllNodes.Add(g6);
		AllNodes.Add(g7);
		AllNodes.Add(g8);
		AllNodes.Add(g9);
		AllNodes.Add(g10);
		AllNodes.Add(g11);
		AllNodes.Add(g12);
		AllNodes.Add(g13);
		AllNodes.Add(g14);
		AllNodes.Add(g15);
		AllNodes.Add(h1);
		AllNodes.Add(h2);
		AllNodes.Add(h3);
		AllNodes.Add(h4);
		AllNodes.Add(h5);
		AllNodes.Add(h6);
		AllNodes.Add(h7);
		AllNodes.Add(h8);
		AllNodes.Add(h9);
		AllNodes.Add(h10);
		AllNodes.Add(h11);
		AllNodes.Add(h12);
		AllNodes.Add(h13);
		AllNodes.Add(h14);
		AllNodes.Add(h15);
		AllNodes.Add(i1);
		AllNodes.Add(i2);
		AllNodes.Add(i3);
		AllNodes.Add(i4);
		AllNodes.Add(i5);
		AllNodes.Add(i6);
		AllNodes.Add(i7);
		AllNodes.Add(i8);
		AllNodes.Add(i9);
		AllNodes.Add(i10);
		AllNodes.Add(i11);
		AllNodes.Add(i12);
		AllNodes.Add(i13);
		AllNodes.Add(i14);
		AllNodes.Add(i15);
		AllNodes.Add(j1);
		AllNodes.Add(j2);
		AllNodes.Add(j3);
		AllNodes.Add(j4);
		AllNodes.Add(j5);
		AllNodes.Add(j6);
		AllNodes.Add(j7);
		AllNodes.Add(j8);
		AllNodes.Add(j9);
		AllNodes.Add(j10);
		AllNodes.Add(j11);
		AllNodes.Add(j12);
		AllNodes.Add(j13);
		AllNodes.Add(j14);
		AllNodes.Add(j15);
	}
	
	public void ResetMap()
	{
		foreach (Node i in AllNodes)
		{
			i.fValue = 999;
			i.gValue = 999;
			i.hValue = 999;
			i.parentNode = a0;
		}
	}
	
}